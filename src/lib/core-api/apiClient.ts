/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { HelloRequestBuilderNavigationMetadata, type HelloRequestBuilder } from './hello/index.js';
// @ts-ignore
import { HubRequestBuilderNavigationMetadata, type HubRequestBuilder } from './hub/index.js';
// @ts-ignore
import { SimulatorRequestBuilderNavigationMetadata, type SimulatorRequestBuilder } from './simulator/index.js';
// @ts-ignore
import { StreamsRequestBuilderNavigationMetadata, type StreamsRequestBuilder } from './streams/index.js';
// @ts-ignore
import { type WorkflowRequestBuilder, WorkflowRequestBuilderNavigationMetadata, WorkflowRequestBuilderRequestsMetadata } from './workflow/index.js';
// @ts-ignore
import { apiClientProxifier, registerDefaultDeserializer, registerDefaultSerializer, type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type RequestAdapter } from '@microsoft/kiota-abstractions';
// @ts-ignore
import { FormParseNodeFactory, FormSerializationWriterFactory } from '@microsoft/kiota-serialization-form';
// @ts-ignore
import { JsonParseNodeFactory, JsonSerializationWriterFactory } from '@microsoft/kiota-serialization-json';
// @ts-ignore
import { MultipartSerializationWriterFactory } from '@microsoft/kiota-serialization-multipart';
// @ts-ignore
import { TextParseNodeFactory, TextSerializationWriterFactory } from '@microsoft/kiota-serialization-text';

/**
 * The main entry point of the SDK, exposes the configuration and the fluent API.
 */
export interface ApiClient extends BaseRequestBuilder<ApiClient> {
    /**
     * The hello property
     */
    get hello(): HelloRequestBuilder;
    /**
     * The hub property
     */
    get hub(): HubRequestBuilder;
    /**
     * The simulator property
     */
    get simulator(): SimulatorRequestBuilder;
    /**
     * The streams property
     */
    get streams(): StreamsRequestBuilder;
    /**
     * The workflow property
     */
    get workflow(): WorkflowRequestBuilder;
}
/**
 * Instantiates a new {@link ApiClient} and sets the default values.
 * @param requestAdapter The request adapter to use to execute the requests.
 */
// @ts-ignore
export function createApiClient(requestAdapter: RequestAdapter) {
    registerDefaultSerializer(JsonSerializationWriterFactory);
    registerDefaultSerializer(TextSerializationWriterFactory);
    registerDefaultSerializer(FormSerializationWriterFactory);
    registerDefaultSerializer(MultipartSerializationWriterFactory);
    registerDefaultDeserializer(JsonParseNodeFactory);
    registerDefaultDeserializer(TextParseNodeFactory);
    registerDefaultDeserializer(FormParseNodeFactory);
    const pathParameters: Record<string, unknown> = {
        "baseurl": requestAdapter.baseUrl,
    };
    return apiClientProxifier<ApiClient>(requestAdapter, pathParameters, ApiClientNavigationMetadata, undefined);
}
/**
 * Uri template for the request builder.
 */
export const ApiClientUriTemplate = "{+baseurl}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ApiClientNavigationMetadata: Record<Exclude<keyof ApiClient, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    hello: {
        navigationMetadata: HelloRequestBuilderNavigationMetadata,
    },
    hub: {
        navigationMetadata: HubRequestBuilderNavigationMetadata,
    },
    simulator: {
        navigationMetadata: SimulatorRequestBuilderNavigationMetadata,
    },
    streams: {
        navigationMetadata: StreamsRequestBuilderNavigationMetadata,
    },
    workflow: {
        requestsMetadata: WorkflowRequestBuilderRequestsMetadata,
        navigationMetadata: WorkflowRequestBuilderNavigationMetadata,
    },
};
/* tslint:enable */
/* eslint-enable */
